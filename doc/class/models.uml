@startuml
package Orm {

package Serializable {
interface SerializerTableFile {
    + getPath() : Path
    + toFile() : void <<default>>
    + fromFile() : String <<default>>
    + fromFileEach(Function<String, void>) : void <<default>>
}

interface SerializerTableCsv{
    + fromCsv() : void <<default>>
    + toCsv() : void <<default>>
}

interface SerializerTableXml{
    + fromXml() : void <<default>>
    + toXml() : void <<default>>
}
}

class Connector {
    - String uri
    - String user
    - String password

    + Connector()
    + Connector(String uri)
    + Connector(String uri, String user, String password)
    + Connector(Path uri)
    + Connector(Path uri, String user, String password)

    + connect() : Connector
    + execute(String query) : Connector
    + close(): void
}

class MySql {
    + Mysql()
    + Mysql(String uri)
    + Mysql(String uri, String user, String password)
    + Mysql(Path uri)
    + Mysql(Path uri, String user, String password)
}

class Fixture {
    
}

class Table {
    - String name
    - Path path

    + Table()
    + Table(String name)

    + select(List<String> columns) : Query
    + insert(Map<String, String>) : Query
    + update(Map<String,String>) : Query
    + delete(Map<String, String>) : Query
}


Connector <|-- MySql
Table "*" --* "1" Connector

SerializerTableCsv <|.. Table
SerializerTableXml <|.. Table
SerializerTableFile  <|-- SerializerTableCsv
SerializerTableFile  <|-- SerializerTableXml
}

package Contact {
class Contact {

}
}

@enduml
